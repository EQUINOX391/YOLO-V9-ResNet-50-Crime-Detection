{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0333defa",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-25T22:03:46.685349Z",
     "iopub.status.busy": "2025-02-25T22:03:46.684982Z",
     "iopub.status.idle": "2025-02-25T22:03:52.091195Z",
     "shell.execute_reply": "2025-02-25T22:03:52.090109Z"
    },
    "papermill": {
     "duration": 5.411039,
     "end_time": "2025-02-25T22:03:52.093072",
     "exception": false,
     "start_time": "2025-02-25T22:03:46.682033",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting ultralytics\r\n",
      "  Downloading ultralytics-8.3.79-py3-none-any.whl.metadata (35 kB)\r\n",
      "Requirement already satisfied: numpy<=2.1.1,>=1.23.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (1.26.4)\r\n",
      "Requirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (3.7.5)\r\n",
      "Requirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (4.10.0.84)\r\n",
      "Requirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (11.0.0)\r\n",
      "Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (6.0.2)\r\n",
      "Requirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.32.3)\r\n",
      "Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (1.13.1)\r\n",
      "Requirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.5.1+cu121)\r\n",
      "Requirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (0.20.1+cu121)\r\n",
      "Requirement already satisfied: tqdm>=4.64.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (4.67.1)\r\n",
      "Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from ultralytics) (5.9.5)\r\n",
      "Requirement already satisfied: py-cpuinfo in /usr/local/lib/python3.10/dist-packages (from ultralytics) (9.0.0)\r\n",
      "Requirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (2.2.3)\r\n",
      "Requirement already satisfied: seaborn>=0.11.0 in /usr/local/lib/python3.10/dist-packages (from ultralytics) (0.12.2)\r\n",
      "Collecting ultralytics-thop>=2.0.0 (from ultralytics)\r\n",
      "  Downloading ultralytics_thop-2.0.14-py3-none-any.whl.metadata (9.4 kB)\r\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.1)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.55.3)\r\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.4.7)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (24.2)\r\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.2.0)\r\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\r\n",
      "Requirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (1.3.8)\r\n",
      "Requirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (1.2.4)\r\n",
      "Requirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (0.1.1)\r\n",
      "Requirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (2025.0.1)\r\n",
      "Requirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (2022.0.0)\r\n",
      "Requirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy<=2.1.1,>=1.23.0->ultralytics) (2.4.1)\r\n",
      "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->ultralytics) (2025.1)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.1.4->ultralytics) (2025.1)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (3.4.1)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (3.10)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (2.3.0)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.23.0->ultralytics) (2025.1.31)\r\n",
      "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (3.17.0)\r\n",
      "Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (4.12.2)\r\n",
      "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (3.4.2)\r\n",
      "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (3.1.4)\r\n",
      "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (2024.12.0)\r\n",
      "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.0->ultralytics) (1.13.1)\r\n",
      "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch>=1.8.0->ultralytics) (1.3.0)\r\n",
      "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.17.0)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.8.0->ultralytics) (3.0.2)\r\n",
      "Requirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (2024.2.0)\r\n",
      "Requirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (2022.0.0)\r\n",
      "Requirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (1.2.0)\r\n",
      "Requirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy<=2.1.1,>=1.23.0->ultralytics) (2024.2.0)\r\n",
      "Requirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy<=2.1.1,>=1.23.0->ultralytics) (2024.2.0)\r\n",
      "Downloading ultralytics-8.3.79-py3-none-any.whl (921 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m921.8/921.8 kB\u001b[0m \u001b[31m21.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading ultralytics_thop-2.0.14-py3-none-any.whl (26 kB)\r\n",
      "Installing collected packages: ultralytics-thop, ultralytics\r\n",
      "Successfully installed ultralytics-8.3.79 ultralytics-thop-2.0.14\r\n"
     ]
    }
   ],
   "source": [
    "# Install the ultralytics package from PyPI\n",
    "!pip install ultralytics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b05b9661",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-25T22:03:52.099259Z",
     "iopub.status.busy": "2025-02-25T22:03:52.098991Z",
     "iopub.status.idle": "2025-02-26T00:37:12.681652Z",
     "shell.execute_reply": "2025-02-26T00:37:12.680534Z"
    },
    "papermill": {
     "duration": 9200.586981,
     "end_time": "2025-02-26T00:37:12.683066",
     "exception": false,
     "start_time": "2025-02-25T22:03:52.096085",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating new Ultralytics Settings v0.0.6 file ✅ \n",
      "View Ultralytics Settings with 'yolo settings' or at '/root/.config/Ultralytics/settings.json'\n",
      "Update Settings with 'yolo settings key=value', i.e. 'yolo settings runs_dir=path/to/dir'. For help see https://docs.ultralytics.com/quickstart/#ultralytics-settings.\n",
      "Downloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolov9c.pt to 'yolov9c.pt'...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 49.4M/49.4M [00:00<00:00, 124MB/s]\n",
      "Processing Test: 0it [00:00, ?it/s]\n",
      "Processing Vandalisme: 100%|██████████| 10/10 [02:32<00:00, 15.22s/it]\n",
      "Processing Normal: 100%|██████████| 3/3 [03:02<00:00, 60.98s/it]\n",
      "Processing Pencurian: 100%|██████████| 10/10 [04:52<00:00, 29.25s/it]\n",
      "Processing Training: 0it [00:00, ?it/s]\n",
      "Processing Vandalisme: 100%|██████████| 88/88 [11:00<00:00,  7.50s/it]\n",
      "Processing Normal: 100%|██████████| 315/315 [1:23:04<00:00, 15.83s/it]\n",
      "Processing Pencurian: 100%|██████████| 82/82 [16:38<00:00, 12.17s/it]\n",
      "Processing Validation: 0it [00:00, ?it/s]\n",
      "Processing Vandalisme: 100%|██████████| 24/24 [03:37<00:00,  9.05s/it]\n",
      "Processing Normal: 100%|██████████| 88/88 [21:29<00:00, 14.65s/it]\n",
      "Processing Pencurian: 100%|██████████| 23/23 [06:54<00:00, 18.01s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ekstraksi frame selesai!\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import cv2\n",
    "from tqdm import tqdm\n",
    "from ultralytics import YOLO\n",
    "\n",
    "model = YOLO('yolov9c.pt')\n",
    "\n",
    "class FrameProcessor:\n",
    "    def __init__(self):\n",
    "        self.counters = {\n",
    "            'Test': {'Normal': 0, 'Pencurian': 0, 'Vandalisme': 0},\n",
    "            'Training': {'Normal': 0, 'Pencurian': 0, 'Vandalisme': 0}\n",
    "        }\n",
    "\n",
    "    def process_dataset(self, base_input, base_output):\n",
    "        # Proses dataset Test\n",
    "        self.process_split(\n",
    "            input_path=os.path.join(base_input, 'Test'),\n",
    "            output_path=os.path.join(base_output, 'Test'),\n",
    "            mode='Test'\n",
    "        )\n",
    "        \n",
    "        # Proses gabungan Training + Validation\n",
    "        self.process_split(\n",
    "            input_path=os.path.join(base_input, 'Training'),\n",
    "            output_path=os.path.join(base_output, 'Training'),\n",
    "            mode='Training'\n",
    "        )\n",
    "        self.process_split(\n",
    "            input_path=os.path.join(base_input, 'Validation'),\n",
    "            output_path=os.path.join(base_output, 'Training'),\n",
    "            mode='Training'\n",
    "        )\n",
    "\n",
    "    def process_split(self, input_path, output_path, mode, frame_skip=3):\n",
    "        if not os.path.exists(input_path):\n",
    "            return\n",
    "\n",
    "        for root, _, files in os.walk(input_path):\n",
    "            for file in tqdm([f for f in files if f.endswith(('.mp4', '.avi', '.mov', '.mkv'))], \n",
    "                           desc=f'Processing {os.path.basename(root)}'):\n",
    "                class_name = os.path.basename(root)\n",
    "                if class_name not in self.counters[mode]:\n",
    "                    continue\n",
    "                \n",
    "                # Update counter dan dapatkan nomor urut video\n",
    "                self.counters[mode][class_name] += 1\n",
    "                video_number = self.counters[mode][class_name]\n",
    "                \n",
    "                # Proses video\n",
    "                self.process_video(\n",
    "                    video_path=os.path.join(root, file),\n",
    "                    output_dir=os.path.join(output_path, class_name),\n",
    "                    class_name=class_name,\n",
    "                    video_number=video_number,\n",
    "                    frame_skip=frame_skip\n",
    "                )\n",
    "\n",
    "    def process_video(self, video_path, output_dir, class_name, video_number, frame_skip):\n",
    "        os.makedirs(output_dir, exist_ok=True)\n",
    "        cap = cv2.VideoCapture(video_path)\n",
    "        frame_count = 0\n",
    "        saved_frames = 0\n",
    "        \n",
    "        while cap.isOpened():\n",
    "            ret, frame = cap.read()\n",
    "            if not ret:\n",
    "                break\n",
    "            \n",
    "            if frame_count % frame_skip == 0:\n",
    "                results = model.predict(frame, conf=0.5, verbose=False)\n",
    "                if any(int(box.cls) == 0 for box in results[0].boxes):\n",
    "                    saved_frames += 1\n",
    "                    self.save_frame(\n",
    "                        frame=frame,\n",
    "                        output_dir=output_dir,\n",
    "                        class_name=class_name,\n",
    "                        video_number=video_number,\n",
    "                        frame_number=saved_frames\n",
    "                    )\n",
    "            \n",
    "            frame_count += 1\n",
    "        \n",
    "        cap.release()\n",
    "\n",
    "    def save_frame(self, frame, output_dir, class_name, video_number, frame_number):\n",
    "        resized = cv2.resize(frame, (64, 64))\n",
    "        filename = f\"{class_name}{video_number:03d}_x264_{frame_number}.jpg\"\n",
    "        cv2.imwrite(os.path.join(output_dir, filename), resized)\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    processor = FrameProcessor()\n",
    "    processor.process_dataset(\n",
    "        base_input='/kaggle/input/extracted-crime-train-data/Dataset',\n",
    "        base_output='/kaggle/working/Dataset'\n",
    "    )\n",
    "    print(\"Ekstraksi frame selesai!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "67b99506",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-26T00:37:12.747163Z",
     "iopub.status.busy": "2025-02-26T00:37:12.746725Z",
     "iopub.status.idle": "2025-02-26T00:37:12.760937Z",
     "shell.execute_reply": "2025-02-26T00:37:12.760038Z"
    },
    "papermill": {
     "duration": 0.046922,
     "end_time": "2025-02-26T00:37:12.762126",
     "exception": false,
     "start_time": "2025-02-26T00:37:12.715204",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "YOLO model file deleted.\n"
     ]
    }
   ],
   "source": [
    "# Hapus file YOLO model setelah selesai\n",
    "if os.path.exists('yolov9c.pt'):\n",
    "    os.remove('yolov9c.pt')\n",
    "    print(\"YOLO model file deleted.\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 6421420,
     "isSourceIdPinned": true,
     "sourceId": 10759498,
     "sourceType": "datasetVersion"
    }
   ],
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 9210.382189,
   "end_time": "2025-02-26T00:37:14.424293",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-25T22:03:44.042104",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
